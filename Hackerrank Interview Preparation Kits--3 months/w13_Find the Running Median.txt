# https://www.hackerrank.com/challenges/three-month-preparation-kit-find-the-running-median/problem?isFullScreen=true&h_l=interview&playlist_slugs%5B%5D=preparation-kits&playlist_slugs%5B%5D=three-month-preparation-kit&playlist_slugs%5B%5D=three-month-week-thirteen
#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'runningMedian' function below.
#
# The function is expected to return a DOUBLE_ARRAY.
# The function accepts INTEGER_ARRAY a as parameter.
#

import heapq as hp
def runningMedian(a):
    # Write your code here
    up=[] # pop smallest...+
    down=[-a[0]] # pop biggest...-
    res=[a[0]+0.0]
    for i in range(1,len(a)):
        num=a[i]
        if num<=-down[0]: # into down..systematic '-' very dangerous
            hp.heappush(down,-num)
        else: # into up
            hp.heappush(up,num)
        # alter the structure & print...make sure down==up+1 or down==up
        if len(down)<len(up): # pop up to down===> down=up+1
            popnum=hp.heappop(up)
            hp.heappush(down,-popnum)
        elif len(down)>len(up)+1: # pop down to up===> down==up
            popnum=-hp.heappop(down)
            hp.heappush(up,popnum)
        
        median=0
        if len(down)==len(up):
            median=(-down[0]+up[0])/2
        elif len(down)==len(up)+1:
            median=-down[0]
        else:
            print("error",len(down),len(up))
            print(down)
            print(up)
            
        res.append(int(median*10)/10)
        # print(down)
        # print(up)
        # print(int(median*10)/10)
        
    return res

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    a_count = int(input().strip())

    a = []

    for _ in range(a_count):
        a_item = int(input().strip())
        a.append(a_item)

    result = runningMedian(a)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
